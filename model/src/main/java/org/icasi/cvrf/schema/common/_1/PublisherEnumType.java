//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.15 at 11:01:26 PM EDT 
//


package org.icasi.cvrf.schema.common._1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PublisherEnumType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PublisherEnumType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="Vendor"/>
 *     &lt;enumeration value="Discoverer"/>
 *     &lt;enumeration value="Coordinator"/>
 *     &lt;enumeration value="User"/>
 *     &lt;enumeration value="Other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PublisherEnumType")
@XmlEnum
public enum PublisherEnumType {


    /**
     * Developers or maintainers of information system products or services.
     * 
     */
    @XmlEnumValue("Vendor")
    VENDOR("Vendor"),

    /**
     * Individuals or organizations that find vulnerabilities or security weaknesses.
     * 
     */
    @XmlEnumValue("Discoverer")
    DISCOVERER("Discoverer"),

    /**
     * Individuals or organizations that manage a single vendor's response or multiple vendors' responses to a vulnerability, a security flaw, or an incident.
     * 
     */
    @XmlEnumValue("Coordinator")
    COORDINATOR("Coordinator"),

    /**
     * Everyone using a vendor's product.
     * 
     */
    @XmlEnumValue("User")
    USER("User"),

    /**
     * Catchall for everyone else. Currently this includes forwarders, re-publishers, language translators and miscellaneous contributors.
     * 
     */
    @XmlEnumValue("Other")
    OTHER("Other");
    private final String value;

    PublisherEnumType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PublisherEnumType fromValue(String v) {
        for (PublisherEnumType c: PublisherEnumType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
